#!/usr/bin/env fish

function main
  set session (select_session_directory)

  if test -z $session
    exit 0
  end

  set session_id (sanitize_id $session)

  # echo "session_id $session_id"
  # exit 0

  if test -z $TMUX; and test -z (pgrep tmux)
    tmux new-session -s $session_id -c $session
    hydrate $session_id $session
    exit 0
  end

  if not has_session $session_id
    tmux new-session -ds $session_id -c $session
    hydrate $session_id $session
  end

  switch_to $session_id
end

function sanitize_id -a directory
  pushd $directory > /dev/null
    set root (dirname (git rev-parse --show-toplevel 2> /dev/null))
  popd
  set name (string replace "$root/" "" "$directory" | tr ":., " "____")
  set hash (echo $directory | sha256sum | string sub --length 6)
  echo (string join "__" $name  $hash)
end

function select_session_directory
  set dirs_files (find $HOME \
    -mindepth 0 \
    -maxdepth 3 \
    -type f \
    -name ".tmux-sessionizer-dirs" -or -name ".tms-dirs")

  set direct_dirs
  set parent_dirs
  for file in $dirs_files
    set base (dirname $file)
    for entry in (cat $file)
      set dir $base/$entry
      if test -d $dir
        if echo $dir | egrep -q "/\$"
          set -a parent_dirs $dir
        else
          set -a direct_dirs $dir
        end
      end
    end
  end

  set total_dirs $direct_dirs (find \
    $parent_dirs \
    -mindepth 1 \
    -maxdepth 1 \
    -type d \
    -not -name ".*")

  echo (printf "%s\n" $total_dirs | sort | uniq | fzf)
end

function switch_to -a target
  if test -z $TMUX
    tmux attach-session -t $target
  else
    tmux switch-client -t $target
  end
end

function has_session -a name
  return (tmux list-sessions | grep -q "$name:")
end

function hydrate -a target dir
  if test -f $dir/.tmux-sessionizer
    tmux send-keys -t  $target "source $dir/.tmux-sessionizer" c-M
  else if test -f $HOME/.tmux-sessionizer
    tmux send-keys -t  $target "source $HOME/.tmux-sessionizer" c-M
  end
end

main
